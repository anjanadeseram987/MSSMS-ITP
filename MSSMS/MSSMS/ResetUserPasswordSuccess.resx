<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbPRSIcon.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>